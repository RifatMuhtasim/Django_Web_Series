"""
Django settings for database project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path, WindowsPath
from decouple import config
import socket


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SE_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!

# DEBUG = config('SE_DEBUG')
DEBUG = True

# ALLOWED_HOSTS = ['labs.com', 'www.labs.com']
# ALLOWED_HOSTS = ['192.168.3.3']
# ALLOWED_HOSTS = ['3b33-103-160-137-1.ngrok.io']
ALLOWED_HOSTS = []

# Runserver With '192.168.3.3' code = "./manage.py runserver_plus --cert /tmp/cert 0.0.0.0:8000"
# Normally Runserver = "./manage.py runserver_plus --cert /tmp/cert"
#python manage.py runsslserver 127.0.0.1:9000

#HTTPS Settings:
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
# SECURE_SSL_REDIRECT= True
# # #HSTS SETTINGS:
# SECURE_HSTS_SECONDS = 31536000
# SECURE_HSTS_PRELOAD = True
# SECURE_HSTS_INCLUDE_SUBDOMAINS= True


# Application definition

INSTALLED_APPS = [
    'CheckoutMoney.apps.CheckoutmoneyConfig',
    'DomainSearch.apps.DomainsearchConfig',
    'UserDetails.apps.UserdetailsConfig',
    'profiles.apps.ProfilesConfig',
    'accounts.apps.AccountsConfig',
    'index.apps.IndexConfig',
    'blog.apps.BlogConfig',
    'Whois.apps.WhoisConfig',
    'DnsSystem.apps.DnssystemConfig',
    'DomainRegistration.apps.DomainregistrationConfig',
    'ApiTest.apps.ApitestConfig',
    'DnsSettings.apps.DnssettingsConfig',
    'ExtraFunction.apps.ExtrafunctionConfig',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'ckeditor',
    'crispy_forms',
    'rest_framework',
    # 'rest_framework.authtoken',
    'rest_auth',
    'django_extensions',
    'ipware',
    # 'sslserver',
]

CRISPY_TAMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lab.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'pages')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lab.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'tablabdb',
#         'USER': config("DB_USER"),
#         'PASSWORD': config('DB_PASSWORD'),
#         'HOST': '127.0.0.1'
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'database/db1.sqlite3',
    }
}

# print(DATABASES)


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL ='signin'
LOGIN_REDIRECT_URL = 'profile'

# Email Password Reset Section 
# https://myaccount.google.com/lesssecureapps
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EM_EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EM_EMAIL_HOST_PASSWORD_APP2')

# EMAIL_USE_SSL = False
# https://accounts.google.com/DisplayUnlockCaptcha
# https://myaccount.google.com/apppasswords

# if os.getcwd() == '/app':
#     DEBUG=False
#     SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
#     SECURE_SSL_REDIRECT = True


# Rest frame work permission 
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}